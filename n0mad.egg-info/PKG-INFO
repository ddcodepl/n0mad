Metadata-Version: 2.4
Name: n0mad
Version: 0.0.3
Summary: N0MAD: Notion Orchestrated Management & Autonomous Developer - AI-powered Notion automation with autonomous development capabilities
Author: N0MAD Development Team
Maintainer: N0MAD Development Team
License: MIT
Project-URL: Homepage, https://github.com/ddcodepl/n0mad
Project-URL: Repository, https://github.com/ddcodepl/n0mad.git
Project-URL: Documentation, https://github.com/ddcodepl/n0mad/blob/main/README.md
Project-URL: Bug Tracker, https://github.com/ddcodepl/n0mad/issues
Keywords: n0mad,notion,automation,ai,autonomous-developer,task-management,openai,anthropic,claude
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Topic :: Office/Business :: Office Suites
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Topic :: Utilities
Requires-Python: >=3.8.1
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: aiohttp>=3.9.0
Requires-Dist: notion-client>=2.2.1
Requires-Dist: openai>=1.35.0
Requires-Dist: psutil>=7.0.0
Requires-Dist: python-dotenv>=1.0.1
Requires-Dist: pathlib2>=2.3.0; python_version < "3.4"
Provides-Extra: dev
Requires-Dist: pytest>=7.0.0; extra == "dev"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: isort>=5.0.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.0.0; extra == "dev"
Provides-Extra: test
Requires-Dist: pytest>=7.0.0; extra == "test"
Requires-Dist: pytest-asyncio>=0.21.0; extra == "test"
Requires-Dist: pytest-cov>=4.0.0; extra == "test"
Dynamic: license-file

# N0MAD - Notion Orchestrated Management & Autonomous Developer

[![Python 3.8+](https://img.shields.io/badge/python-3.8+-blue.svg)](https://www.python.org/downloads/)
[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)
[![Version](https://img.shields.io/badge/version-0.0.1-green.svg)](https://pypi.org/project/n0mad/)

**N0MAD** is an AI-powered autonomous developer that seamlessly integrates with Notion to provide intelligent task management, automated development workflows, and collaborative AI assistance. Built with support for Claude, OpenAI, Anthropic, and other leading AI providers.

## 🤖 What is N0MAD?

**N0MAD** stands for **"Notion Orchestrated Management & Autonomous Developer"** - a revolutionary tool that transforms your Notion workspace into an intelligent development command center. N0MAD doesn't just manage tasks; it actively participates in development as an autonomous AI developer.

### Key Capabilities

- 🧠 **Autonomous Development**: AI that writes, refactors, and improves code
- 📊 **Intelligent Task Orchestration**: Smart task prioritization and workflow management
- 🔄 **Seamless Notion Integration**: Native integration with your existing Notion workspace
- 🚀 **Multi-AI Provider Support**: Claude, OpenAI, Anthropic, and OpenRouter
- 🛡️ **Enterprise Security**: Production-ready security and configuration management
- 📈 **Performance Monitoring**: Built-in analytics and performance tracking

## 🚀 Features

- **Global Installation**: Install once, use anywhere on your system with `pip install n0mad`
- **Multi-AI Provider Support**: OpenAI, Anthropic Claude, and OpenRouter integration
- **Autonomous Code Generation**: AI that actually writes and improves code
- **Secure Configuration**: Environment variable management with validation and security checks
- **Directory Independence**: Run from any directory with automatic path resolution
- **Comprehensive CLI**: Rich command-line interface with configuration management
- **Task Processing Modes**: Multiple modes for different workflow requirements
- **Robust Error Handling**: Comprehensive logging and error recovery
- **Performance Monitoring**: Built-in performance tracking and metrics
- **Pre-commit Integration**: Automated code quality and formatting

## 📦 Quick Installation

### 🚀 Standalone Installation (No pip required)

**One-line install:**
```bash
curl -sSL https://raw.githubusercontent.com/ddcodepl/n0mad/master/quick-install.sh | bash
```

- ✅ **No pip required** - Creates self-contained installation
- ✅ **Complete isolation** - Uses its own virtual environment
- ✅ **Auto-dependency handling** - Installs Python, git, curl if needed
- ✅ **Works everywhere** - Linux, macOS, Windows (WSL)

### 📦 Pip Installation

```bash
pip install n0mad
```

### 🛠️ Development Installation

```bash
git clone https://github.com/ddcodepl/n0mad.git
cd n0mad
pip install -e .
```

**📋 See [Standalone Installation Guide](STANDALONE_INSTALL.md) for detailed instructions**

## ⚙️ Configuration

### Quick Setup

1. **Get configuration help:**
   ```bash
   n0mad --config-help
   ```

2. **Create configuration template:**
   ```bash
   n0mad --config-create
   ```

3. **Check configuration status:**
   ```bash
   n0mad --config-status
   ```

### Required Environment Variables

| Variable | Description | Required |
|----------|-------------|----------|
| `NOTION_TOKEN` | Your Notion integration token | ✅ Yes |
| `NOTION_BOARD_DB` | Your Notion database ID | ✅ Yes |

### AI Provider API Keys (at least one required)

| Variable | Description | Provider |
|----------|-------------|----------|
| `OPENAI_API_KEY` | OpenAI API key | OpenAI |
| `OPENROUTER_API_KEY` | OpenRouter API key | OpenRouter |
| `ANTHROPIC_API_KEY` | Anthropic API key | Anthropic |

### Optional Configuration

| Variable | Description | Default |
|----------|-------------|---------|
| `NOMAD_HOME` | Base directory for N0MAD files | `~/.nomad` |
| `NOMAD_TASKS_DIR` | Directory for task files | `./tasks` |
| `NOMAD_LOG_LEVEL` | Logging level | `INFO` |
| `NOMAD_MAX_CONCURRENT_TASKS` | Max concurrent task processing | `3` |
| `NOMAD_CONFIG_FILE` | Path to global config file | `~/.nomad/config.env` |

### Configuration Methods

#### 1. Environment Variables
```bash
export NOTION_TOKEN="your_notion_token_here"
export NOTION_BOARD_DB="your_database_id_here"
export OPENAI_API_KEY="your_openai_key_here"
```

#### 2. Local .env File
Create a `.env` file in your working directory:
```env
NOTION_TOKEN=your_notion_token_here
NOTION_BOARD_DB=your_database_id_here
OPENAI_API_KEY=your_openai_key_here
```

#### 3. Global Configuration File
```bash
# Create template
n0mad --config-create

# Edit the created file at ~/.nomad/config.env
# Set environment variable to use it
export NOMAD_CONFIG_FILE=~/.nomad/config.env
```

## 🔑 Getting API Keys

### Notion Setup

1. Go to [Notion Integrations](https://www.notion.so/my-integrations)
2. Create a new integration
3. Copy the Internal Integration Token (`NOTION_TOKEN`)
4. Share your database with the integration
5. Copy the database ID from the database URL (`NOTION_BOARD_DB`)

### AI Provider Setup

#### OpenAI
1. Visit [OpenAI API Keys](https://platform.openai.com/api-keys)
2. Create a new API key
3. Copy the key (starts with `sk-`)

#### Anthropic
1. Visit [Anthropic Console](https://console.anthropic.com/)
2. Go to API Keys section
3. Create a new key (starts with `sk-ant-`)

#### OpenRouter
1. Visit [OpenRouter Keys](https://openrouter.ai/keys)
2. Create a new API key
3. Copy the key (starts with `sk-or-`)

## 🖥️ Usage

### Basic Commands

```bash
# Show help
n0mad --help

# Show version
n0mad --version

# Configuration management
n0mad --config-help          # Show configuration help
n0mad --config-create        # Create configuration template
n0mad --config-status        # Show current configuration status
```

### Processing Modes

```bash
# Continuous polling mode (default)
n0mad

# Process 'To Refine' status tasks
n0mad --refine

# Process 'Prepare Tasks' status
n0mad --prepare

# Process 'Queued to run' status tasks
n0mad --queued

# Multi-status processing mode
n0mad --multi
```

### Advanced Options

```bash
# Set working directory
n0mad --working-dir /path/to/project

# Run from any directory
cd /anywhere
n0mad --config-status
```

## 🔧 Development

### Prerequisites

- Python 3.8 or higher
- pip or pipx for installation

### Development Setup

```bash
# Clone repository
git clone https://github.com/ddcodepl/n0mad.git
cd n0mad

# Install in development mode
pip install -e .

# Install development dependencies
pip install -e .[dev]

# Run tests
pytest

# Format code
black .
isort .

# Type checking
mypy .
```

### Project Structure

```
n0mad/
├── src/                  # Source code
│   ├── clients/          # API client implementations
│   ├── core/             # Core processing logic
│   ├── entry/            # CLI entry point
│   └── utils/            # Utility modules
├── tasks/                # Task storage (root level)
│   ├── tasks/            # Individual task files
│   ├── summary/          # Task summaries
│   └── refined/          # Refined task files
├── tests/                # Test suite
├── pyproject.toml        # Package configuration
└── README.md             # This file
```

## 🔒 Security

### API Key Security

- API keys are automatically masked in logs
- Sensitive data is never exposed in error messages
- Configuration validation includes security checks
- Support for secure configuration files with proper permissions

### Best Practices

1. Use configuration files instead of environment variables for production
2. Set proper file permissions (600) on configuration files
3. Regularly rotate API keys
4. Monitor logs for security warnings

## 🐛 Troubleshooting

### Common Issues

#### Installation Problems

```bash
# If n0mad command not found after installation
export PATH=$PATH:~/.local/bin

# Check if installation succeeded
pip show n0mad
```

#### Configuration Issues

```bash
# Check configuration status
n0mad --config-status

# Validate configuration
n0mad --config-help

# Test from different directory
cd /tmp && n0mad --version
```

#### API Connection Problems

```bash
# Check API key formats
n0mad --config-status

# Test with minimal configuration
n0mad --config-create
# Edit config file and test
n0mad --config-status
```

### Debug Mode

Enable debug logging:
```bash
export NOMAD_LOG_LEVEL=DEBUG
n0mad --config-status
```

### Getting Help

1. Check configuration: `n0mad --config-status`
2. Review logs in `~/.nomad/logs/`
3. Consult this documentation
4. [Open an issue](https://github.com/ddcodepl/n0mad/issues)

## 📝 Changelog

### v0.0.1
- 🎉 **Initial N0MAD Release**
- ✨ Rebranded from nomad-notion-automation to N0MAD
- 🤖 **Autonomous Developer Capabilities**: AI that writes and improves code
- 📦 **pip install n0mad**: Simple installation via PyPI
- 🏗️ **Enhanced Architecture**: Improved codebase organization
- 🛡️ **Production Security**: Enterprise-grade security implementation
- 📊 **Performance Monitoring**: Built-in performance tracking
- 🔧 **Pre-commit Integration**: Automated code quality
- 📁 **Root Task Storage**: Tasks now stored in project root for better organization

## 🚀 Automated Releases

N0MAD uses GitHub Actions for automated versioning and PyPI deployment:

### 🔄 Automatic Releases
- **Trigger**: Push to `master` branch
- **Version**: Automatic patch version bump (e.g., 0.0.1 → 0.0.2)
- **Process**: Build → Test → Tag → Release → Deploy to PyPI

### 🎯 Manual Releases
- **Trigger**: Manual workflow dispatch
- **Version**: Choose patch/minor/major bump
- **Options**: Create pre-releases for testing

### 📦 Latest Version
Check the latest release: [GitHub Releases](https://github.com/ddcodepl/n0mad/releases)

## 🤝 Contributing

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Add tests
5. Submit a pull request

### 🔧 Development Workflow
- Push to `master` automatically creates new releases
- All tests must pass before deployment
- Version bumping is handled automatically

## 📄 License

This project is licensed under the MIT License - see the [LICENSE](LICENSE) file for details.

## 🙏 Acknowledgments

- [Notion API](https://developers.notion.com/) for the excellent API
- [OpenAI](https://openai.com/) for AI capabilities
- [Anthropic](https://anthropic.com/) for Claude integration
- [OpenRouter](https://openrouter.ai/) for multi-model access

---

**Made with ❤️ by the N0MAD Development Team**

*N0MAD: Where AI meets productivity. Transform your Notion workspace into an intelligent development ecosystem.*
